import{_ as s,o as n,c as a,a as l}from"./app.1c48239b.js";const p={},e=l(`<h1 id="stack-\u6808" tabindex="-1"><a class="header-anchor" href="#stack-\u6808" aria-hidden="true">#</a> Stack \u6808</h1><ul><li>\u50CF\u8FD9\u79CD\u62EC\u53F7\u5339\u914D\u7684\u9898\u76EE\u57FA\u672C\u90FD\u9700\u8981\u7528\u6808\u6765\u5904\u7406\u3002 \u56E0\u4E3A\u6240\u6709\u53F3\u62EC\u53F7\u90FD\u662F\u4E0E\u6700\u8FD1\u7684\u5DE6\u62EC\u53F7\u5339\u914D\u7684\uFF0C\u6240\u4EE5\u53EF\u4EE5\u7528\u6808\u6765\u8BB0\u5F55\u6240\u6709\u672A\u5339\u914D\u7684\u5DE6\u62EC\u53F7\u3002</li></ul><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(n) \u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(n)</p><p>https://leetcode.cn/problems/minimum-remove-to-make-valid-parentheses/</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">minRemoveToMakeValid</span><span style="color:#D4D4D4;">(s </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// available[i] \u8868\u793A s[i] \u662F\u5426\u5408\u6CD5\uFF0C\u521D\u59CB\u5316\u5747\u4E0D\u5408\u6CD5</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">available</span><span style="color:#D4D4D4;"> := </span><span style="color:#DCDCAA;">make</span><span style="color:#D4D4D4;">([]</span><span style="color:#4EC9B0;">bool</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(s))</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// stack \u5B58\u50A8\u5F53\u524D\u53EF\u4F9B\u5339\u914D\u7684\u5DE6\u62EC\u53F7</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">stack</span><span style="color:#D4D4D4;"> := </span><span style="color:#DCDCAA;">make</span><span style="color:#D4D4D4;">([]</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// \u5E26\u4E0B\u6807\u904D\u5386 s \u4E2D\u7684\u6BCF\u4E00\u4E2A\u5B57\u7B26</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">ch</span><span style="color:#D4D4D4;"> := </span><span style="color:#C586C0;">range</span><span style="color:#D4D4D4;"> s {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#6A9955;">// \u6839\u636E\u5B57\u7B26\u79CD\u7C7B\u8FDB\u884C\u4E0D\u540C\u5904\u7406</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> ch == </span><span style="color:#CE9178;">&#39;(&#39;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">// \u5982\u679C\u662F\u5DE6\u62EC\u53F7\uFF0C\u5219\u76F4\u63A5\u628A\u5F53\u524D\u4E0B\u6807\u538B\u5165\u6808\u4E2D\uFF0C</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">// \u56E0\u4E3A\u5F53\u524D\u5DE6\u62EC\u53F7\u53EF\u80FD\u4F1A\u4E0E\u540E\u7EED\u7684\u53F3\u62EC\u53F7\u5339\u914D</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">stack</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">append</span><span style="color:#D4D4D4;">(stack, i)</span></span>
<span class="line"><span style="color:#D4D4D4;">        } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> ch == </span><span style="color:#CE9178;">&#39;)&#39;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">// \u5982\u679C\u662F\u53F3\u62EC\u53F7\uFF0C\u6B64\u65F6\u82E5\u6808\u4E2D\u8FD8\u6709\u5DE6\u62EC\u53F7\uFF0C</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">// \u5219\u5F53\u524D\u62EC\u53F7\u5BF9\u5408\u6CD5</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(stack) &gt; </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#6A9955;">// \u6807\u8BB0\u5DE6\u62EC\u53F7\u5408\u6CD5</span></span>
<span class="line"><span style="color:#D4D4D4;">                available[stack[</span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(stack)-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]] = </span><span style="color:#569CD6;">true</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#6A9955;">// \u6807\u8BB0\u53F3\u62EC\u53F7\u5408\u6CD5</span></span>
<span class="line"><span style="color:#D4D4D4;">                available[i] = </span><span style="color:#569CD6;">true</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#6A9955;">// \u5F39\u51FA\u8BE5\u5DE6\u62EC\u53F7\u7684\u4E0B\u6807 j</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#9CDCFE;">stack</span><span style="color:#D4D4D4;"> = stack[:</span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(stack)-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">            }</span></span>
<span class="line"><span style="color:#D4D4D4;">        } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">// \u5982\u679C\u662F\u5176\u4ED6\u5B57\u7B26\uFF0C\u5219\u5FC5\u5B9A\u5408\u6CD5\uFF0C\u6807\u8BB0\u5373\u53EF</span></span>
<span class="line"><span style="color:#D4D4D4;">            available[i] = </span><span style="color:#569CD6;">true</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// ans \u6536\u96C6\u6240\u6709\u5408\u6CD5\u7684\u5B57\u7B26</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">ans</span><span style="color:#D4D4D4;"> := bytes.Buffer{}</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// \u904D\u5386 s \u4E2D\u7684\u6BCF\u4E00\u4E2A\u5B57\u7B26</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">ch</span><span style="color:#D4D4D4;"> := </span><span style="color:#C586C0;">range</span><span style="color:#D4D4D4;"> s {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#6A9955;">// \u5982\u679C\u8BE5\u5B57\u7B26\u5408\u6CD5\uFF0C\u5219\u653E\u5165 ans \u4E2D</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> available[i] {</span></span>
<span class="line"><span style="color:#D4D4D4;">            ans.</span><span style="color:#DCDCAA;">WriteRune</span><span style="color:#D4D4D4;">(ch)</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// \u8FD4\u56DE ans \u4E2D\u7684\u5B57\u7B26\u4E32</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> ans.</span><span style="color:#DCDCAA;">String</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[e];function D(c,r){return n(),a("div",null,o)}var t=s(p,[["render",D],["__file","index.html.vue"]]);export{t as default};

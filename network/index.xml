<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Networks on airdb</title><link>https://airdb.dev/interview/network/</link><description>Recent content in Networks on airdb</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://airdb.dev/interview/network/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://airdb.dev/interview/network/tcp-state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://airdb.dev/interview/network/tcp-state/</guid><description>TCP state in OS # TCP 的状态 # ![tcp-status](images/tcp-status.jpg) 1、客户端独有的：（1）SYN_SENT （2）FIN_WAIT1 （3）FIN_WAIT2 （4）CLOSING （5）TIME_WAIT 。
2、服务器独有的：（1）LISTEN （2）SYN_RCVD （3）CLOSE_WAIT （4）LAST_ACK 。
3、共有的：（1）CLOSED （2）ESTABLISHED 。
各个状态的意义如下： LISTEN - 侦听来自远方TCP端口的连接请求； SYN-SENT -在发送连接请求后等待匹配的连接请求； SYN-RECEIVED - 在收到和发送一个连接请求后等待对连接请求的确认； ESTABLISHED- 代表一个打开的连接，数据可以传送给用户； FIN-WAIT-1 - 等待远程TCP的连接中断请求，或先前的连接中断请求的确认； FIN-WAIT-2 - 从远程TCP等待连接中断请求； CLOSE-WAIT - 等待从本地用户发来的连接中断请求； CLOSING -等待远程TCP对连接中断的确认； LAST-ACK - 等待原来发向远程TCP的连接中断请求的确认； TIME-WAIT -等待足够的时间以确保远程TCP接收到连接中断请求的确认； CLOSED - 没有任何连接状态； TCP连接过程是状态的转换，促使发生状态转换的是用户调用： OPEN，SEND，RECEIVE，CLOSE，ABORT和STATUS 1、建立连接协议（三次握手）
（1）客户 端发送一个带SYN标志的TCP报文到服务器。这是三次握手过程中的报文1。 （2） 服务器端回应客户端的，这是三次握手中的第2个报文，这个报文同时带ACK标志和SYN标 志。因此它表示对刚才客户端SYN报文的回应；同时又标志SYN给客户端，询问客户端是否准备好进行数据通 讯。 （3） 客户必须再次回应服务段一个ACK报文，这是报文段3。 2、连接终止协议（四次握手）</description></item><item><title/><link>https://airdb.dev/interview/network/tcp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://airdb.dev/interview/network/tcp/</guid><description>TCP/IP 基础理论 # TCP # From: 一文彻底搞懂 TCP三次握手、四次挥手过程及原理
Form: 面试官：换人！他连 TCP 这几个参数都不懂
Form: 为什么 TCP 协议有 TIME_WAIT 状态</description></item></channel></rss>